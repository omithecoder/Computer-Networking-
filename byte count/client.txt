#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <unistd.h>

#define MAX 100

int main() {
    int sockfd;
    struct sockaddr_in servaddr;
    char buffer[MAX], send_buffer[MAX + 4]; // Extra 4 bytes for storing the message length

    sockfd = socket(AF_INET, SOCK_STREAM, 0);
    if (sockfd == -1) {
        perror("Socket creation failed");
        exit(EXIT_FAILURE);
    }

    bzero(&servaddr, sizeof(servaddr));
    servaddr.sin_family = AF_INET;
    servaddr.sin_addr.s_addr = inet_addr("127.0.0.1");
    servaddr.sin_port = htons(8080);

    if (connect(sockfd, (struct sockaddr*)&servaddr, sizeof(servaddr)) != 0) {
        perror("Connection failed");
        exit(EXIT_FAILURE);
    }

    printf("Connected to server.\n");

    while (1) {
        printf("Enter the Message to be Sent (or 'bye' to exit): ");
        fgets(buffer, MAX, stdin);
        buffer[strcspn(buffer, "\n")] = '\0'; // Remove newline

        if (strcmp(buffer, "bye") == 0) {
            write(sockfd, "", 1);
            break;
        }

        int length = strlen(buffer);
        snprintf(send_buffer, sizeof(send_buffer), "%04d%s", length, buffer); // Prefix message with its length

        printf("Sending Message...\n");
        write(sockfd, send_buffer, strlen(send_buffer));

        printf("Thanks for the Feedback Server!!\n\n");
    }

    close(sockfd);
    return 0;
}
